{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enma\\\\Documents\\\\SynergySphere\\\\frontend\\\\src\\\\pages\\\\ProjectDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Box, Button, List, Paper, ListItemText, Avatar, CircularProgress } from '@mui/material';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProjectDetailPage() {\n  _s();\n  const {\n    id: projectId\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(`http://127.0.0.1:5000/tasks`).then(res => res.json()).then(data => {\n      // Filter tasks by projectId\n      setTasks(data.filter(task => String(task.project_id) === String(projectId)));\n      setLoading(false);\n    });\n  }, [projectId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 600,\n      mx: 'auto',\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        fontWeight: 700,\n        color: '#1976d2'\n      },\n      children: \"Project Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          mb: 2,\n          p: 2,\n          display: 'flex',\n          alignItems: 'center',\n          boxShadow: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            bgcolor: '#1976d2',\n            mr: 2\n          },\n          children: task.assignee_id ? String(task.assignee_id) : '?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }, this),\n          secondary: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"text.secondary\",\n            children: [\"Due: \", task.due_date || 'N/A', \" | Status: \", task.status]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        mt: 2,\n        fontWeight: 600\n      },\n      children: \"+ Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectDetailPage, \"dZzI6N5zGCa2LQ6I5N7yVKCRFnw=\", false, function () {\n  return [useParams];\n});\n_c = ProjectDetailPage;\nexport default ProjectDetailPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","Typography","Box","Button","List","Paper","ListItemText","Avatar","CircularProgress","useParams","jsxDEV","_jsxDEV","ProjectDetailPage","_s","id","projectId","tasks","setTasks","loading","setLoading","fetch","then","res","json","data","filter","task","String","project_id","sx","mt","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mx","variant","gutterBottom","fontWeight","color","map","mb","p","display","alignItems","boxShadow","bgcolor","mr","assignee_id","primary","title","secondary","due_date","status","_c","$RefreshReg$"],"sources":["C:/Users/Enma/Documents/SynergySphere/frontend/src/pages/ProjectDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Typography, Box, Button, List, Paper, ListItemText, Avatar, CircularProgress } from '@mui/material';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction ProjectDetailPage() {\r\n  const { id: projectId } = useParams();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://127.0.0.1:5000/tasks`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        // Filter tasks by projectId\r\n        setTasks(data.filter(task => String(task.project_id) === String(projectId)));\r\n        setLoading(false);\r\n      });\r\n  }, [projectId]);\r\n\r\n  if (loading) {\r\n    return <Box sx={{ mt: 8, textAlign: 'center' }}><CircularProgress /></Box>;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 600, mx: 'auto', mt: 4 }}>\r\n      <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 700, color: '#1976d2' }}>Project Tasks</Typography>\r\n      <List>\r\n        {tasks.map(task => (\r\n          <Paper key={task.id} sx={{ mb: 2, p: 2, display: 'flex', alignItems: 'center', boxShadow: 2 }}>\r\n            <Avatar sx={{ bgcolor: '#1976d2', mr: 2 }}>{task.assignee_id ? String(task.assignee_id) : '?'}</Avatar>\r\n            <ListItemText\r\n              primary={<Typography variant=\"h6\">{task.title}</Typography>}\r\n              secondary={<Typography color=\"text.secondary\">Due: {task.due_date || 'N/A'} | Status: {task.status}</Typography>}\r\n            />\r\n          </Paper>\r\n        ))}\r\n      </List>\r\n      <Button variant=\"contained\" color=\"primary\" sx={{ mt: 2, fontWeight: 600 }}>+ Add Task</Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default ProjectDetailPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}